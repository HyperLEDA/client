# generated by datamodel-codegen:
#   filename:  swagger.json
#   timestamp: 2024-05-04T20:54:18+00:00

from __future__ import annotations

from dataclasses import dataclass
from enum import Enum
from typing import Any


@dataclass
class PingRequestSchema:
    pass


@dataclass
class PingResponseSchema:
    ping: str | None = None


@dataclass
class CreateSourceRequestSchema:
    bibcode: str | None = None
    title: str | None = None
    authors: list[str] | None = None
    year: int | None = None


@dataclass
class CreateSourceResponseSchema:
    id: int


class PageSize(Enum):
    integer_10 = 10
    integer_20 = 20
    integer_50 = 50
    integer_100 = 100


@dataclass
class GetSourceListRequestSchema:
    title: str
    page_size: PageSize | None = 20
    page: int | None = 0


@dataclass
class GetSourceResponse:
    bibcode: str | None = None
    title: str | None = None
    authors: list[str] | None = None
    year: int | None = None


@dataclass
class GetSourceListResponseSchema:
    sources: list[GetSourceResponse] | None = None


@dataclass
class GetSourceRequestSchema:
    id: int


@dataclass
class GetSourceResponseSchema:
    bibcode: str | None = None
    title: str | None = None
    authors: list[str] | None = None
    year: int | None = None


class PageSize1(Enum):
    integer_5 = 5
    integer_10 = 10
    integer_20 = 20


@dataclass
class SearchCatalogsRequestSchema:
    query: str
    page_size: PageSize1 | None = 10


@dataclass
class Field:
    id: str | None = None
    description: str | None = None
    unit: str | None = None


@dataclass
class Table:
    id: str | None = None
    num_rows: int | None = None
    fields: list[Field] | None = None


@dataclass
class Catalog:
    id: str | None = None
    description: str | None = None
    url: str | None = None
    bibcode: str | None = None
    tables: list[Table] | None = None


@dataclass
class SearchCatalogsResponseSchema:
    catalogs: list[Catalog] | None = None


@dataclass
class StartTaskRequestSchema:
    task_name: str
    payload: dict[str, Any] | None = None


@dataclass
class StartTaskResponseSchema:
    id: int | None = None


@dataclass
class GetTaskInfoRequestSchema:
    task_id: int


@dataclass
class GetTaskInfoResponseSchema:
    id: int | None = None
    task_name: str | None = None
    status: str | None = None
    payload: dict[str, Any] | None = None
    start_time: str | None = None
    end_time: str | None = None
    message: dict[str, Any] | None = None


class DataType(Enum):
    str = "str"
    string = "string"
    int = "int"
    integer = "integer"
    float = "float"
    double = "double"


@dataclass
class ColumnDescription:
    name: str
    data_type: DataType
    unit: str
    description: str | None = None


class Datatype(Enum):
    regular = "regular"
    reprocessing = "reprocessing"
    preliminary = "preliminary"
    compilation = "compilation"


@dataclass
class CreateTableRequestSchema:
    table_name: str
    columns: list[ColumnDescription]
    bibliography_id: int
    datatype: Datatype | None = Datatype.regular
    description: str | None = None


@dataclass
class CreateTableResponseSchema:
    id: int | None = None


@dataclass
class AddDataRequestSchema:
    table_id: int
    data: list[dict[str, Any]]


@dataclass
class AddDataResponseSchema:
    pass


@dataclass
class LoginRequestSchema:
    username: str
    password: str


@dataclass
class LoginResponseSchema:
    token: str | None = None
