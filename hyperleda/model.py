# generated by datamodel-codegen:
#   filename:  swagger.json
#   timestamp: 2025-02-02T15:14:49+00:00

from __future__ import annotations

from dataclasses import dataclass
from enum import Enum
from typing import Any, Optional


@dataclass
class AddDataRequestSchema:
    table_id: int
    data: list[dict[str, Any]]


@dataclass
class AddDataResponseSchema:
    pass


@dataclass
class CreateSourceRequestSchema:
    title: str
    authors: list[str]
    year: int


@dataclass
class CreateSourceResponseSchema:
    code: str


class DataType(Enum):
    str = "str"
    string = "string"
    character_varying = "character varying"
    text = "text"
    character = "character"
    char = "char"
    short = "short"
    int = "int"
    integer = "integer"
    smallint = "smallint"
    float = "float"
    double = "double"
    double_precision = "double precision"
    real = "real"
    timestamp_without_time_zone = "timestamp without time zone"


@dataclass
class ColumnDescription:
    name: str
    data_type: DataType
    unit: str | None = None
    ucd: str | None = None
    description: str | None = ""


class Datatype(Enum):
    regular = "regular"
    reprocessing = "reprocessing"
    preliminary = "preliminary"
    compilation = "compilation"


@dataclass
class CreateTableRequestSchema:
    table_name: str
    columns: list[ColumnDescription]
    bibcode: str
    datatype: Datatype | None = Datatype.regular
    description: str | None = ""


@dataclass
class CreateTableResponseSchema:
    id: int


@dataclass
class GetTableValidationRequestSchema:
    table_id: int


@dataclass
class TableValidation:
    message: str | None = None
    validator: str | None = None


@dataclass
class GetTableValidationResponseSchema:
    validations: list[TableValidation] | None = None


@dataclass
class PatchTableAction:
    pass


@dataclass
class PatchTableRequestSchema:
    table_id: int
    actions: list[PatchTableAction]


@dataclass
class PatchTableResponseSchema:
    pass


@dataclass
class GetTaskInfoRequestSchema:
    task_id: int


@dataclass
class GetTaskInfoResponseSchema:
    id: int | None = None
    task_name: str | None = None
    status: str | None = None
    payload: dict[str, Any] | None = None
    start_time: str | None = None
    end_time: str | None = None
    message: dict[str, Any] | None = None


@dataclass
class LoginRequestSchema:
    username: str
    password: str


@dataclass
class LoginResponseSchema:
    token: str | None = None


@dataclass
class Overrides:
    id: str
    pgc: int | None = None


@dataclass
class SetTableStatusRequestSchema:
    table_id: int
    overrides: list[Overrides] | None = None


@dataclass
class SetTableStatusResponseSchema:
    pass


@dataclass
class CrossIdentification:
    inner_radius_arcsec: float | None = 1.5
    outer_radius_arcsec: float | None = 3.0


@dataclass
class TableProcessRequestSchema:
    table_id: int
    cross_identification: CrossIdentification | None = None


@dataclass
class TableProcessResponseSchema:
    pass


@dataclass
class TableStatusStatsRequestSchema:
    table_id: int


@dataclass
class TableStatusStatsResponseSchema:
    processing: dict[str, int] | None = None
